{"ast":null,"code":"var _jsxFileName = \"/home/vishal/projects/fullstack/Job-portal/frontend/src/components/Jobs/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { Link } from \"react-router-dom\";\nimport \"./jobs.css\";\nimport Job from \"./../../Assets/jobs.json\";\nimport Filter from \"../Filter\";\nimport { AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst experience = [{\n  min: 0,\n  max: 1\n}, {\n  min: 2,\n  max: 3\n}, {\n  min: 4,\n  max: 5\n}, {\n  min: 5,\n  max: 10\n}];\nconst Jobs = () => {\n  _s();\n  const JobData = JSON.parse(localStorage.getItem(\"item\")) || [];\n  const [filteredJobs, setFilteredJobs] = useState([...JobData, ...Job]);\n  const [searchterm, setSearchTerm] = useState(\"\");\n  const [active, setActive] = useState(false);\n  function handleJobFilter(event) {\n    const value = event.target.innerText;\n    event.preventDefault();\n    setFilteredJobs(Job.filter(job => {\n      return job.role === value;\n    }));\n  }\n  function saveClick(id, logo, company, position, location, posted) {\n    window.localStorage.setItem(\"Job\", JSON.stringify(id, logo, company, position, location, posted));\n    console.log(JobData);\n  }\n  const searchEvent = event => {\n    const data = event.target.value;\n    setSearchTerm(data);\n    if (searchterm !== \"\" || searchterm.length > 2) {\n      const filterData = Job.filter(item => {\n        if (item) {\n          return Object.values(item).join(\"\").toLowerCase().includes(searchterm.toLowerCase());\n        } else {\n          return 0;\n        }\n      });\n      setFilteredJobs(filterData);\n    } else {\n      setFilteredJobs(Job);\n    }\n  };\n  function handleExperienceFilter(checkedState) {\n    let filters = [];\n    checkedState.forEach((item, index) => {\n      if (item === true) {\n        const filterS = Job.filter(job => {\n          return job.experience >= experience[index].min && job.experience <= experience[index].max;\n        });\n        filters = [...filters, ...filterS];\n      }\n      setFilteredJobs(filters);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), filteredJobs.map(_ref => {\n      var _JSON$parse;\n      let {\n        id,\n        logo,\n        company,\n        position,\n        location,\n        posted,\n        role\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo.length > 20 ? logo : require(`../../Assets/images/${logo}`),\n              alt: \"logo\",\n              className: \"job-profile\",\n              loading: \"lazy\" // Lazy loading for better performance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-detail\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-posting\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/apply-jobs\",\n                className: \"apply-link\",\n                children: \"Apply Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"save-button\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"save-icon-button\",\n                onClick: () => saveClick(id, logo, company, position, location, posted),\n                children: ((_JSON$parse = JSON.parse(localStorage.getItem(\"Job\"))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.id) === id ? /*#__PURE__*/_jsxDEV(AiFillHeart, {\n                  className: \"heart-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 15\n                }, this) : /*#__PURE__*/_jsxDEV(AiOutlineHeart, {\n                  className: \"heart-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 5\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 3\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(Jobs, \"5mBSe2IVXZgYasFNKd7e5VC5vtM=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","Navbar","Link","Job","Filter","AiOutlineHeart","AiFillHeart","experience","min","max","Jobs","JobData","JSON","parse","localStorage","getItem","filteredJobs","setFilteredJobs","searchterm","setSearchTerm","active","setActive","handleJobFilter","event","value","target","innerText","preventDefault","filter","job","role","saveClick","id","logo","company","position","location","posted","window","setItem","stringify","console","log","searchEvent","data","length","filterData","item","Object","values","join","toLowerCase","includes","handleExperienceFilter","checkedState","filters","forEach","index","filterS","map","require"],"sources":["/home/vishal/projects/fullstack/Job-portal/frontend/src/components/Jobs/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { Link } from \"react-router-dom\";\nimport \"./jobs.css\";\nimport Job from \"./../../Assets/jobs.json\";\nimport Filter from \"../Filter\";\nimport { AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\n\nconst experience = [\n  { min: 0, max: 1 },\n  { min: 2, max: 3 },\n  { min: 4, max: 5 },\n  { min: 5, max: 10 },\n];\n\nconst Jobs = () => {\n  const JobData = JSON.parse(localStorage.getItem(\"item\")) || [];\n  const [filteredJobs, setFilteredJobs] = useState([...JobData, ...Job]);\n  const [searchterm, setSearchTerm] = useState(\"\");\n  const [active, setActive] = useState(false);\n  function handleJobFilter(event) {\n    const value = event.target.innerText;\n    event.preventDefault();\n    setFilteredJobs(\n      Job.filter((job) => {\n        return job.role === value;\n      })\n    );\n  }\n  function saveClick(id, logo, company, position, location, posted) {\n    window.localStorage.setItem(\n      \"Job\",\n      JSON.stringify(id, logo, company, position, location, posted)\n    );\n    console.log(JobData);\n  }\n  const searchEvent = (event) => {\n    const data = event.target.value;\n    setSearchTerm(data);\n    if (searchterm !== \"\" || searchterm.length > 2) {\n      const filterData = Job.filter((item) => {\n        if (item) {\n          return Object.values(item)\n            .join(\"\")\n            .toLowerCase()\n            .includes(searchterm.toLowerCase());\n        } else {\n          return 0;\n        }\n      });\n      setFilteredJobs(filterData);\n    } else {\n      setFilteredJobs(Job);\n    }\n  };\n  function handleExperienceFilter(checkedState) {\n    let filters = [];\n    checkedState.forEach((item, index) => {\n      if (item === true) {\n        const filterS = Job.filter((job) => {\n          return (\n            job.experience >= experience[index].min &&\n            job.experience <= experience[index].max\n          );\n        });\n        filters = [...filters, ...filterS];\n      }\n      setFilteredJobs(filters);\n    });\n  }\n  return (\n    <>\n      <Navbar />\n      {filteredJobs.map(({ id, logo, company, position, location, posted, role }) => (\n  <div className=\"job-list\" key={id}>\n    <div className=\"job-card\">\n      <div className=\"job-name\">\n        <img\n          src={logo.length > 20 ? logo : require(`../../Assets/images/${logo}`)}\n          alt=\"logo\"\n          className=\"job-profile\"\n          loading=\"lazy\" // Lazy loading for better performance\n        />\n        <div className=\"job-detail\">\n          <h4>{company}</h4>\n          <h3>{position}</h3>\n          <div className=\"category\">\n            <p>{location}</p>\n            <p>{role}</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"job-button\">\n        <div className=\"job-posting\">\n          <Link to=\"/apply-jobs\" className=\"apply-link\">Apply Now</Link>\n        </div>\n        <div className=\"save-button\">\n          <button\n            className=\"save-icon-button\"\n            onClick={() => saveClick(id, logo, company, position, location, posted)}\n          >\n            {JSON.parse(localStorage.getItem(\"Job\"))?.id === id ? (\n              <AiFillHeart className=\"heart-icon\" />\n            ) : (\n              <AiOutlineHeart className=\"heart-icon\" />\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n))}\n\n    </>\n  );\n};\n\nexport default Jobs;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}