{"ast":null,"code":"var _jsxFileName = \"/home/vishal/projects/fullstack/frontend/src/components/Discussion/commentCard.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport parse from \"html-react-parser\";\nimport Reply from \"./reply\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar imageUrlRegex = /\\b(https?:\\/\\/[^\\s]+)/g;\nconst CommentCard = _ref => {\n  _s();\n  var _value$content;\n  let {\n    value,\n    deleteComment\n  } = _ref;\n  const {\n    _id,\n    name,\n    rating,\n    content\n  } = value;\n  const [isOpen, setIsOpen] = useState(false);\n  const [reply, setReply] = useState([]);\n  const [toggle, setToggle] = useState(true);\n  const [replyBox, setReplyBox] = useState(false);\n  function addReply(name, comment) {\n    setReply(prevReply => [...prevReply, {\n      name,\n      comment\n    }]);\n    setIsOpen(!isOpen);\n  }\n  const deleteReply = index => {\n    let deleteList = [...reply];\n    deleteList.splice(index, 1);\n    setReply(deleteList);\n  };\n  const imageUrl = value === null || value === void 0 ? void 0 : (_value$content = value.content) === null || _value$content === void 0 ? void 0 : _value$content.match(imageUrlRegex);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-boxes\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name\",\n              \"data-testid\": \"names\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating\",\n              \"data-testid\": \"ratings\",\n              children: [rating, \"\\u2B50\\uFE0F\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)]\n          }, _id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-icon\",\n            \"data-testid\": \"toggle-btn\",\n            onClick: () => setToggle(!toggle),\n            children: toggle ? \"-\" : \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), toggle && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            \"data-testid\": \"comments\",\n            children: parse(content === null || content === void 0 ? void 0 : content.replace(imageUrlRegex, \"\"))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            \"data-testid\": \"image-preview\",\n            className: `${imageUrl ? \"image-text-editor\" : \"\"}`,\n            style: {\n              width: \"150px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"reply\",\n              onClick: () => setIsOpen(!isOpen),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reply-btn\",\n                children: \"Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reply-count\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"view-reply\",\n                onClick: () => setReplyBox(!replyBox),\n                children: [replyBox ? \"Hide Reply\" : \"Show Reply\", \" (\", reply.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              role: \"delete\",\n              className: \"delete\",\n              onClick: deleteComment,\n              children: /*#__PURE__*/_jsxDEV(AiFillDelete, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Reply, {\n      onAdd: addReply\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 18\n    }, this), reply === null || reply === void 0 ? void 0 : reply.map(_ref2 => {\n      let {\n        id,\n        name,\n        comment\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: replyBox && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reply-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-boxes\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"review\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"top-area\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"name\",\n                  children: [\" \", name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment\",\n                  children: parse(`${comment}`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"buttons\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete\",\n                    onClick: deleteReply,\n                    children: /*#__PURE__*/_jsxDEV(AiFillDelete, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true);\n};\n_s(CommentCard, \"EPLDUNtAo6gahclcjoVLgIbds9I=\");\n_c = CommentCard;\nexport default CommentCard;\nvar _c;\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"names":["useState","AiFillDelete","parse","Reply","imageUrlRegex","CommentCard","value","deleteComment","_id","name","rating","content","isOpen","setIsOpen","reply","setReply","toggle","setToggle","replyBox","setReplyBox","addReply","comment","prevReply","deleteReply","index","deleteList","splice","imageUrl","match","replace","width","length","map","id"],"sources":["/home/vishal/projects/fullstack/frontend/src/components/Discussion/commentCard.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport parse from \"html-react-parser\";\nimport Reply from \"./reply\";\n\nvar imageUrlRegex = /\\b(https?:\\/\\/[^\\s]+)/g;\n\nconst CommentCard = ({ value, deleteComment }) => {\n  const { _id, name, rating, content } = value;\n  const [isOpen, setIsOpen] = useState(false);\n  const [reply, setReply] = useState([]);\n  const [toggle, setToggle] = useState(true);\n  const [replyBox, setReplyBox] = useState(false);\n\n  function addReply(name, comment) {\n    setReply((prevReply) => [...prevReply, { name, comment }]);\n    setIsOpen(!isOpen);\n  }\n  const deleteReply = (index) => {\n    let deleteList = [...reply];\n    deleteList.splice(index, 1);\n    setReply(deleteList);\n  };\n\n  const imageUrl = value?.content?.match(imageUrlRegex);\n  return (\n    <>\n      <div className=\"comment-boxes\">\n        <div className=\"review\">\n          <div className=\"top-area\">\n            <div className=\"comment-left\" key={_id}>\n              <div className=\"name\" data-testid=\"names\">\n                {name}\n              </div>\n              <div className=\"rating\" data-testid=\"ratings\">\n                {rating}⭐️\n              </div>\n            </div>\n            <div\n              className=\"add-icon\"\n              data-testid=\"toggle-btn\"\n              onClick={() => setToggle(!toggle)}\n            >\n              {toggle ? \"-\" : \"+\"}\n            </div>\n          </div>\n          {toggle && (\n            <div>\n              <div className=\"comment\" data-testid=\"comments\">\n                {parse(content?.replace(imageUrlRegex, \"\"))}\n              </div>\n              {imageUrl && (\n                <img\n                  src={imageUrl}\n                  data-testid=\"image-preview\"\n                  className={`${imageUrl ? \"image-text-editor\" : \"\"}`}\n                  style={{ width: \"150px\" }}\n                />\n              )}\n\n              <div className=\"buttons\">\n                <button\n                  type=\"button\"\n                  className=\"reply\"\n                  onClick={() => setIsOpen(!isOpen)}\n                >\n                  <div className=\"reply-btn\">Reply</div>\n                </button>\n                <button className=\"reply-count\">\n                  <div\n                    className=\"view-reply\"\n                    onClick={() => setReplyBox(!replyBox)}\n                  >\n                    {replyBox ? \"Hide Reply\" : \"Show Reply\"} ({reply.length})\n                  </div>\n                </button>\n                <button\n                  role=\"delete\"\n                  className=\"delete\"\n                  onClick={deleteComment}\n                >\n                  <AiFillDelete />\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      {isOpen && <Reply onAdd={addReply} />}\n      {reply?.map(({ id, name, comment }) => {\n        return (\n          <>\n            {replyBox && (\n              <div className=\"reply-section\">\n                <div className=\"comment-boxes\" key={id}>\n                  <div className=\"review\">\n                    <div className=\"top-area\">\n                      <div className=\"name\"> {name}</div>\n                    </div>\n                    <div>\n                      <div className=\"comment\">{parse(`${comment}`)}</div>\n                      <div className=\"buttons\">\n                        <button className=\"delete\" onClick={deleteReply}>\n                          <AiFillDelete />\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </>\n        );\n      })}\n    </>\n  );\n};\n\nexport default CommentCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}