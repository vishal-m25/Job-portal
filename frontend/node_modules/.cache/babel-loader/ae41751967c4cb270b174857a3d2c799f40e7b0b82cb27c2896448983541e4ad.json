{"ast":null,"code":"var _jsxFileName = \"/home/vishal/projects/fullstack/Job-portal/frontend/src/components/Jobs/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { Link } from \"react-router-dom\";\nimport \"./jobs.css\";\nimport Job from \"./../../Assets/jobs.json\";\nimport Filter from \"../Filter\";\nimport { AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst experience = [{\n  min: 0,\n  max: 1\n}, {\n  min: 2,\n  max: 3\n}, {\n  min: 4,\n  max: 5\n}, {\n  min: 5,\n  max: 10\n}];\nconst Jobs = () => {\n  _s();\n  const JobData = JSON.parse(localStorage.getItem(\"item\")) || [];\n  const [filteredJobs, setFilteredJobs] = useState([...JobData, ...Job]);\n  const [searchterm, setSearchTerm] = useState(\"\");\n  const [active, setActive] = useState(false);\n  function handleJobFilter(event) {\n    const value = event.target.innerText;\n    event.preventDefault();\n    setFilteredJobs(Job.filter(job => {\n      return job.role === value;\n    }));\n  }\n  function saveClick(id, logo, company, position, location, posted) {\n    window.localStorage.setItem(\"Job\", JSON.stringify(id, logo, company, position, location, posted));\n    console.log(JobData);\n  }\n  const searchEvent = event => {\n    const data = event.target.value;\n    setSearchTerm(data);\n    if (searchterm !== \"\" || searchterm.length > 2) {\n      const filterData = Job.filter(item => {\n        if (item) {\n          return Object.values(item).join(\"\").toLowerCase().includes(searchterm.toLowerCase());\n        } else {\n          return 0;\n        }\n      });\n      setFilteredJobs(filterData);\n    } else {\n      setFilteredJobs(Job);\n    }\n  };\n  function handleExperienceFilter(checkedState) {\n    let filters = [];\n    checkedState.forEach((item, index) => {\n      if (item === true) {\n        const filterS = Job.filter(job => {\n          return job.experience >= experience[index].min && job.experience <= experience[index].max;\n        });\n        filters = [...filters, ...filterS];\n      }\n      setFilteredJobs(filters);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Jobs, \"5mBSe2IVXZgYasFNKd7e5VC5vtM=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","Navbar","Link","Job","Filter","AiOutlineHeart","AiFillHeart","experience","min","max","Jobs","JobData","JSON","parse","localStorage","getItem","filteredJobs","setFilteredJobs","searchterm","setSearchTerm","active","setActive","handleJobFilter","event","value","target","innerText","preventDefault","filter","job","role","saveClick","id","logo","company","position","location","posted","window","setItem","stringify","console","log","searchEvent","data","length","filterData","item","Object","values","join","toLowerCase","includes","handleExperienceFilter","checkedState","filters","forEach","index","filterS"],"sources":["/home/vishal/projects/fullstack/Job-portal/frontend/src/components/Jobs/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { Link } from \"react-router-dom\";\nimport \"./jobs.css\";\nimport Job from \"./../../Assets/jobs.json\";\nimport Filter from \"../Filter\";\nimport { AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\n\nconst experience = [\n  { min: 0, max: 1 },\n  { min: 2, max: 3 },\n  { min: 4, max: 5 },\n  { min: 5, max: 10 },\n];\n\nconst Jobs = () => {\n  const JobData = JSON.parse(localStorage.getItem(\"item\")) || [];\n  const [filteredJobs, setFilteredJobs] = useState([...JobData, ...Job]);\n  const [searchterm, setSearchTerm] = useState(\"\");\n  const [active, setActive] = useState(false);\n  function handleJobFilter(event) {\n    const value = event.target.innerText;\n    event.preventDefault();\n    setFilteredJobs(\n      Job.filter((job) => {\n        return job.role === value;\n      })\n    );\n  }\n  function saveClick(id, logo, company, position, location, posted) {\n    window.localStorage.setItem(\n      \"Job\",\n      JSON.stringify(id, logo, company, position, location, posted)\n    );\n    console.log(JobData);\n  }\n  const searchEvent = (event) => {\n    const data = event.target.value;\n    setSearchTerm(data);\n    if (searchterm !== \"\" || searchterm.length > 2) {\n      const filterData = Job.filter((item) => {\n        if (item) {\n          return Object.values(item)\n            .join(\"\")\n            .toLowerCase()\n            .includes(searchterm.toLowerCase());\n        } else {\n          return 0;\n        }\n      });\n      setFilteredJobs(filterData);\n    } else {\n      setFilteredJobs(Job);\n    }\n  };\n  function handleExperienceFilter(checkedState) {\n    let filters = [];\n    checkedState.forEach((item, index) => {\n      if (item === true) {\n        const filterS = Job.filter((job) => {\n          return (\n            job.experience >= experience[index].min &&\n            job.experience <= experience[index].max\n          );\n        });\n        filters = [...filters, ...filterS];\n      }\n      setFilteredJobs(filters);\n    });\n  }\n  return (\n    <>\n      <Navbar />\n      \n      \n    </>\n  );\n};\n\nexport default Jobs;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}